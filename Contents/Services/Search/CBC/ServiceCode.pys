BASE_URL = 'http://www.cbc.ca'
SEARCH_URL = 'http://search.cbc.ca/search?q=%s&num=10&client=video-search&proxystylesheet=video-search&output=xml_no_dtd&site=2011-Video&getfields=*&proxyreload=1&ie=utf8&oe=utf8&requiredfields=audioVideo:Video&filter=p'

def Search(query):

    oc = ObjectContainer()
    data = HTML.ElementFromURL(SEARCH_URL % query)

    for clip in data.xpath('//div[@class="clips"]//div[contains(@class, "clip col")]'):

        clip_url = clip.xpath('.//a/@href')[0]

        if not clip_url.startswith(BASE_URL):
            clip_url = BASE_URL + clip_url

        title = clip.xpath('.//img/@alt')[0]
        thumb = clip.xpath('.//img/@src')[0]

        try:
            date = Datetime.ParseDate(clip.xpath('.//span[@class="date"]/text()')[0]).date()
        except:
            date = None

        try:
            runtime = clip.xpath('.//span[@class="length"]/text()')[0].split(':')

            if len(runtime) == 3:
                duration = ((int(runtime[0])*60 + int(runtime[1]))*60 + int(runtime[2]))*1000
            elif len(runtime) == 2:
                duration = (int(runtime.split(':')[0])*60 + int(runtime.split(':')[1]))*1000
            else:
                duration = int(runtime[0])*1000
        except:
            duration = None

        try:
            summary = clip.xpath('.//span[@class="desc"]/text()')[0]
        except:
            summary = None

        oc.add(VideoClipObject(
            url = clip_url,
            title = title,
            summary = summary,
            duration = duration,
            originally_available_at = date,
            thumb = Resource.ContentsOfURLWithFallback(url=thumb, fallback='icon-default.jpg')
        ))

    return oc
